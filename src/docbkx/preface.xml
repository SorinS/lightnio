<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE preface PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
                 "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<!-- 
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
  
     http://www.apache.org/licenses/LICENSE-2.0
  
   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<preface id="preface">
    <title>Preface</title>
    <section>
        <title>Benefits and shortcomings of the non-blocking I/O model</title>
        <para>
        Contrary to the popular belief, the performance of NIO in terms of raw data throughput is 
        significantly lower than that of blocking I/O. NIO does not necessarily fit all use cases 
        and should be used only where appropriate: 
        </para>
        <itemizedlist>
            <listitem>
                <para>
                handling of thousands of connections, a significant number of which can be idle.
                </para>
            </listitem>
            <listitem>
                <para>
                handling high latency connections.
                </para>
            </listitem>
            <listitem>
                <para>
                request / response handling needs to be decoupled.
                </para>
            </listitem>
        </itemizedlist>
    </section>
    <section>
        <title>Differences from other NIO frameworks</title>
        <para>
        Solves similar problems as other frameworks, but has certain distinct features: 
        </para>
        <itemizedlist>
            <listitem>
                <para>
                minimalistic, optimized for data volume intensive protocols such as HTTP.
                </para>
            </listitem>
            <listitem>
                <para>
                efficient memory management: data consumer can read only as much input data as it 
                can process without having to allocate more memory.
                </para>
            </listitem>
            <listitem>
                <para>
                direct access to the NIO channels where possible.
                </para>
            </listitem>
        </itemizedlist>
    </section>
</preface>